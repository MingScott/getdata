% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_admin_data.R
\name{get_admin_data}
\alias{get_admin_data}
\alias{get_states}
\alias{get_counties}
\title{Get U.S. State and County boundary data for a location}
\usage{
get_states(
  location = NULL,
  dist = NULL,
  diag_ratio = NULL,
  unit = NULL,
  asp = NULL,
  class = "df",
  call = caller_env(),
  ...
)

get_counties(
  location = NULL,
  dist = NULL,
  diag_ratio = NULL,
  unit = NULL,
  asp = NULL,
  class = "df",
  ...
)
}
\arguments{
\item{location}{A `sf`, `sfc`, or `bbox` object or a character string that
matches a geoid, name, abb, or statefp for [us_states] or [us_counties].}

\item{dist}{buffer distance in units. Optional.}

\item{diag_ratio}{ratio of diagonal distance of area's bounding box used as
buffer distance. e.g. if the diagonal distance is 3000 meters and the
"diag_ratio = 0.1"  a 300 meter will be used. Ignored when \code{dist} is
provided.}

\item{unit}{Units for buffer. Supported options include "meter", "foot",
"kilometer", and "mile", "nautical mile" Common abbreviations (e.g. "km"
instead of "kilometer") are also supported. Distance in units is converted
to units matching GDAL units for x; defaults to "meter"}

\item{asp}{Aspect ratio of width to height as a numeric value (e.g. 0.33) or
character (e.g. "1:3"). If numeric, \code{\link[overedge:get_asp]{get_asp()}} returns the same value
without modification.}

\item{class}{Class of data to return, "df" (default), "sf", "bbox", or "sfc"}

\item{...}{Additional parameters including geoid, name, state, or county.}
}
\description{
Get U.S. states and counties from packaged [us_counties] or [us_states] data.
See [get_tigris_data()] for more options.
}
\examples{
get_states(
  location = "Maryland"
)

get_counties(
  name = "Baltimore city, Maryland"
)

# Using short names with abbreviated state names for look-up may result in inexact matches
get_counties(
  county = "Baltimore, MD"
)

# Two-digit integer GeoIDs are supported
# bbox and wkt columns are dropped when returning class "sf"
get_states(
  geoid = 24,
  class = "sf"
)

# sf locations are used as a spatial filter
plot(
  get_counties(
    location = get_states("MD", class = "sf"),
    class = "sf"
  ),
  max.plot = 1
)
}
