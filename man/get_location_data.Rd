% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_location_data.R
\name{get_location_data}
\alias{get_location_data}
\alias{map_location_data}
\title{Get data for a location}
\usage{
get_location_data(
  location = NULL,
  dist = getOption("overedge.dist"),
  diag_ratio = getOption("overedge.diag_ratio"),
  unit = getOption("overedge.unit", default = "meter"),
  asp = getOption("overedge.asp"),
  data = NULL,
  package = getOption("overedge.data_package"),
  filetype = getOption("overedge.data_filetype", default = "gpkg"),
  fn = NULL,
  crop = TRUE,
  trim = FALSE,
  from_crs = getOption("overedge.from_crs"),
  crs = getOption("overedge.crs"),
  class = "sf",
  label = NULL,
  index = NULL,
  col = NULL,
  ...
)

map_location_data(
  location = NULL,
  dist = NULL,
  diag_ratio = NULL,
  unit = NULL,
  asp = NULL,
  data = NULL,
  package = NULL,
  filetype = "gpkg",
  fn = NULL,
  crop = TRUE,
  trim = FALSE,
  from_crs = NULL,
  crs = NULL,
  class = "list",
  label = NULL,
  load = FALSE,
  index = NULL,
  ...
)
}
\arguments{
\item{location}{sf object. If multiple areas are provided, they are unioned
into a single sf object using [sf::st_union]}

\item{dist}{buffer distance in units. Optional.}

\item{diag_ratio}{ratio of diagonal distance of area's bounding box used as
buffer distance. e.g. if the diagonal distance is 3000 meters and the
"diag_ratio = 0.1"  a 300 meter will be used. Ignored when \code{dist} is
provided.}

\item{unit}{Units for buffer. Supported options include "meter", "foot",
"kilometer", and "mile", "nautical mile" Common abbreviations (e.g. "km"
instead of "kilometer") are also supported. Distance in units is converted
to units matching GDAL units for x; defaults to "meter"}

\item{asp}{Aspect ratio of width to height as a numeric value (e.g. 0.33) or
character (e.g. "1:3"). If numeric, \code{\link[overedge:get_asp]{get_asp()}} returns the same value
without modification.}

\item{data}{Character string (e.g. url, file path, or name of data from
package), a `sf`, `sfc`, or `bbox`  object including data in area.}

\item{package}{Name of the package to search for data.}

\item{filetype}{File type to use if passing parameters to [overedge::read_sf_download]
or [overedge::read_sf_pkg] (required for extdata and cached data).}

\item{fn}{Function to apply to data after filtering by location but before
returning from function.}

\item{crop}{If \code{TRUE}, data is cropped to location or bounding box
\link[sf:st_crop]{sf::st_crop} adjusted by the \code{dist}, \code{diag_ratio}, and \code{asp} parameters
provided. Default TRUE.}

\item{trim}{If \code{TRUE}, data is trimmed to area with \link[sf:geos_binary_ops]{sf::st_intersection}.
This option ignores any \code{dist}, \code{diag_ratio}, or \code{asp} parameters. Default
\code{FALSE}.}

\item{from_crs}{Coordinate reference system used to match the location CRS to
the source data.}

\item{crs}{Coordinate reference system to return.}

\item{class}{Class of object to return.}

\item{label}{label is optionally used by [map_location_data] to name the data
objects in the list returned by the function.}

\item{index}{A list of possible location, data, and (optionally) package
values. List must be named and include a value named package and package
must be `NULL`, to set package based on index. If list is not `NULL` and
location and/or data as character or numeric values, the location and data
are assumed to be index values for the index list. The index parameter
supports nested lists created by [make_location_data_list] (using only the
default key names of "location" and "data"). This feature has not be fully
tested and may result in errors or unexpected results.}

\item{...}{additional parameters passed to [overedge::read_sf_path], [overedge::read_sf_url], or
[overedge::read_sf_pkg] and [overedge::location_filter]}

\item{load}{If `TRUE` and class is "list", load data to local environment;
defaults `FALSE`.}
}
\description{
Returns data for a selected location or a list of locations (for
[map_location_data]). If data is a character string, the parameter is passed
to [overedge::read_sf_url], [overedge::read_sf_path], or [overedge::read_sf_pkg]. This function uses
[overedge::location_filter()] to filter (using [sf::st_intersects]), crop, or trim data
to the provided location. location can also be an an address, county GeoID,
state name, abbreviation, or GeoID.
}
\details{
Working with sf lists for data and locations:

  [map_location_data] makes it easier to work with `sf` lists. It supports data
  as a character vector, data as an `sf` list when location is a single object,
  location as a character vector or `sf` list (including lists of `bbox` or `sfc`
  objects), or when both data and location are lists (such as a list created
  by [make_location_data_list]).
}
\examples{
map_location_data(
  data = c("streets", "mta_bus_lines"),
  package = "mapbaltimore",
  location = get_location(
    type = "council_districts",
    id = 1,
    package = "mapbaltimore"),
  load = TRUE
)
}
