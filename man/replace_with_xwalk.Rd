% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/format_address_data.R
\name{replace_with_xwalk}
\alias{replace_with_xwalk}
\alias{replace_street_suffixes}
\alias{replace_street_dir_prefixes}
\title{Replace values in a character vector or data frame with a crosswalk}
\usage{
replace_with_xwalk(
  x,
  .cols = NULL,
  xwalk = NULL,
  dict = NULL,
  abb = TRUE,
  case = NULL,
  .strict = TRUE,
  ignore_case = TRUE
)

replace_street_suffixes(
  x,
  street_suffix = "street_type",
  xwalk = NULL,
  abb = TRUE,
  case = NULL
)

replace_street_dir_prefixes(
  x,
  street_dir_prefix = "street_dir_prefix",
  xwalk = NULL,
  abb = TRUE,
  case = NULL
)
}
\arguments{
\item{x}{A data.frame or character vector. If x is a character vector, .cols
is optional. If x is a data.frame, x is required.}

\item{.cols}{<\code{\link[dplyr:dplyr_tidy_select]{tidy-select}}> Columns to transform.
Because \code{across()} is used within functions like \code{summarise()} and
\code{mutate()}, you can't select or compute upon grouping variables.}

\item{xwalk, dict}{Named list or data frame with a minimum of two columns
where one column contains the replacement values and the other the values
to replace. If xwalk is \code{NULL}, dict is used and vice-versa. If both are
provided, the xwalk values take precedence so they can be used to override
a dict or add new values.}

\item{abb}{If abb is \code{TRUE} (default), the second column of the dict is
assumed to be abbreviation that should be used as the replace for the
values in x or the replacement column. Otherwise, the first column is
assumed to hold the replacement values and the second column is assumed to
hold the original values. For example, for \code{\link[=replace_street_suffixes]{replace_street_suffixes()}}, If
\code{TRUE}, replace full suffix names with abbreviations. If \code{FALSE}, replace
abbreviations with full street suffix names.}

\item{case}{Case to use for text in new columns or in modified values.
Options include "lower", "upper", "title", or "sentence". Defaults to
\code{NULL} which leaves the case as is.}

\item{.strict}{If \code{TRUE} (default), match whole strings by appending "^" to
the front and "$" to the end of each pattern in the xwalk.}

\item{ignore_case}{Passed to \code{\link[stringr:modifiers]{stringr::regex()}}}

\item{street_suffix}{Street suffix column to apply replacement function to.}

\item{street_dir_prefix}{Street direction prefix column to apply replacement
function to.}
}
\description{
Use \code{\link[stringr:str_replace]{stringr::str_replace_all()}} to replace values in a character vector or
(with \code{\link[dplyr:across]{dplyr::across()}}) in select columns from a data.frame.
\code{\link[=replace_street_dir_prefixes]{replace_street_dir_prefixes()}} and \code{\link[=replace_street_suffixes]{replace_street_suffixes()}} pass
reference data (\link{street_dir_prefixes} and \link{street_suffixes}) to the dict
parameter to support formatting addresses with \code{\link[=bind_block_col]{bind_block_col()}}.
}
\examples{
address_df <-
  data.frame(
    "bldg_num" = c("100", "1415", "600", "10"),
    "street_dir_prefix" = c(NA, NA, "N", NA),
    "street_name" = c("Holiday", "Key", "Charles", "Art Museum"),
    "street_type" = c("St", "Hwy", "St", "Dr")
  )

replace_street_suffixes(
  c("Street", "Highway", "Avenue", "Drive")
)

replace_street_suffixes(
  address_df,
  abb = FALSE,
  case = "sentence"
)

replace_street_dir_prefixes(
  c("North", "East", "West")
)

replace_street_dir_prefixes(
  c("S", "W", "N"),
  abb = FALSE,
  case = "sentence"
)
}
